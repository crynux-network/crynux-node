name: Create and publish the Standalone LXC image

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'build manually trigger'
        required: true
        default: 'triggered by developer'
      blockchain:
        description: 'Blockchain'
        required: true
        default: 'dymension'

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      BLOCKCHAIN: ${{ inputs.blockchain || 'dymension' }}

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 35840
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set the config files
        run: bash build/set-config-files.sh "$BLOCKCHAIN"

      - name: Update LXC YAML with dynamic values
        id: update-yaml
        run: |
          # Get commit hash for version
          SHA_SHORT=$(git rev-parse --short HEAD)

          # Determine version based on ref type
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # This is a tag build - use tag name as version
            VERSION="${{ github.ref_name }}"
          else
            # This is a debug build - use commit hash
            VERSION="${SHA_SHORT}"
          fi

          echo "Using version: ${VERSION}"
          echo "Using blockchain: ${BLOCKCHAIN}"

          # Export for later steps
          echo "sha_short=${SHA_SHORT}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          # Create a full version that includes blockchain for file naming
          FULL_VERSION="${VERSION}-${BLOCKCHAIN}"
          echo "full_version=${FULL_VERSION}" >> $GITHUB_OUTPUT

          # Replace placeholders in LXC YAML
          sed -i "s/RELEASE_VERSION/${VERSION}/g" build/lxc/crynux-node.lxc.yaml
          sed -i "s/BLOCKCHAIN_NAME/${BLOCKCHAIN}/g" build/lxc/crynux-node.lxc.yaml

          echo "Updated LXC YAML file:"
          cat build/lxc/crynux-node.lxc.yaml

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y debootstrap gpg squashfs-tools

      - name: Install distrobuilder via Snap
        run: |
          # Per official documentation, snap is the recommended way to install distrobuilder.
          # We rely on the snap to be self-contained with its core dependencies.
          sudo snap install distrobuilder --classic

      - name: Build Incus image with distrobuilder
        run: |
          # The snap installation places distrobuilder directly in the PATH.
          # Use build-incus to generate Incus format images
          sudo -E distrobuilder build-incus build/lxc/crynux-node.lxc.yaml -o image.architecture=$(dpkg --print-architecture)

      - name: List generated files
        run: |
          echo "Files generated by distrobuilder:"
          ls -la
          echo "Checking for Incus image format files:"
          find . -name "incus.tar.xz" -o -name "rootfs.squashfs" | head -10

      - name: Rename artifacts with version
        run: |
          FULL_VERSION="${{ steps.update-yaml.outputs.full_version }}"
          sudo mv incus.tar.xz "incus-${FULL_VERSION}.tar.xz"
          sudo mv rootfs.squashfs "rootfs-${FULL_VERSION}.squashfs"
          echo "Renamed files to include full version: ${FULL_VERSION}"
          ls -la incus-*.tar.xz rootfs-*.squashfs

      - name: Change ownership of artifacts
        run: |
          FULL_VERSION="${{ steps.update-yaml.outputs.full_version }}"
          sudo chown runner:runner "incus-${FULL_VERSION}.tar.xz" "rootfs-${FULL_VERSION}.squashfs"

      - name: Upload images to registry server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.REGISTRY_HOST }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          key: ${{ secrets.REGISTRY_SSH_KEY }}
          port: ${{ secrets.REGISTRY_PORT }}
          source: "incus-${{ steps.update-yaml.outputs.full_version }}.tar.xz,rootfs-${{ steps.update-yaml.outputs.full_version }}.squashfs"
          target: "/var/www/lxc/uploads/"
          command_timeout: "60m"

      - name: Process image on server
        uses: appleboy/ssh-action@v1.2.2
        env:
          VERSION: ${{ steps.update-yaml.outputs.full_version }}
        with:
          host: ${{ secrets.REGISTRY_HOST }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          key: ${{ secrets.REGISTRY_SSH_KEY }}
          port: ${{ secrets.REGISTRY_PORT }}
          envs: VERSION
          script_path: build/lxc/process-lxc-images.sh

      - name: Upload Incus image artifacts (backup)
        uses: actions/upload-artifact@v4
        with:
          name: crynux-node-incus-image-${{ steps.update-yaml.outputs.full_version }}
          path: |
            incus-${{ steps.update-yaml.outputs.full_version }}.tar.xz
            rootfs-${{ steps.update-yaml.outputs.full_version }}.squashfs
